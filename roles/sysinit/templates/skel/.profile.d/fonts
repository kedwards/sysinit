#!/usr/bin/env bash

# fonts
alias fonts='fc-cache -f -v'
alias inf='install_nerd_font'
alias rnf='remove_nerd_font'
alias lnf='list_installed_fonts'
date_stamp=$(date +"%F_%H-%M-%S")

# Select the Nerd Font from https://www.nerdfonts.com/font-downloads
fonts_list=("Agave" "AnonymousPro" "Arimo" "AurulentSansMono" "BigBlueTerminal" "BitstreamVeraSansMono" "CascadiaCode" "CodeNewRoman" "ComicShannsMono" "Cousine" "DaddyTimeMono" "DejaVuSansMono" "FantasqueSansMono" "FiraCode" "FiraMono" "Gohu" "Go-Mono" "Hack" "Hasklig" "HeavyData" "Hermit" "iA-Writer" "IBMPlexMono" "InconsolataGo" "InconsolataLGC" "Inconsolata" "IosevkaTerm" "JetBrainsMono" "Lekton" "LiberationMono" "Lilex" "Meslo" "Monofur" "Monoid" "Mononoki" "MPlus" "NerdFontsSymbolsOnly" "Noto" "OpenDyslexic" "Overpass" "ProFont" "ProggyClean" "RobotoMono" "ShareTechMono" "SourceCodePro" "SpaceMono" "Terminus" "Tinos" "UbuntuMono" "Ubuntu" "VictorMono")

install_nerd_font() {
  if [ "$(command -v curl)" ]; then
    cmd="curl -OL"
  elif [ "$(command -v wget)" ]; then
    cmd="wget"
  else
    echo "curl or wget is required to install a nerd font!"
    return 1
  fi

  PS3='Select font to install, or 0 to exit: '
  select font in "${fonts_list[@]}"; do
    if [[ $REPLY == "0" ]]; then
      return
    elif [[ -z $font ]]; then
      echo 'Invalid choice, try again' >&2
    else
      break
    fi
  done

  if [ ! -d "$HOME/.fonts/$font/" ]; then
    $cmd "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/$font.zip"
    mkdir -p "$HOME/.fonts"
    unzip "$font.zip" -d "$HOME/.fonts/$font/"
    fc-cache -fv
    rm -r "$font.zip"
    echo "$font $date_stamp" >>"$HOME/.fonts/_sysinit_font.lock"
  fi
}

list_installed_fonts() {
  if [ ! -f "$HOME/.fonts/_sysinit_font.lock" ]; then
    echo "No fonts installed with this script."
    return
  fi

  awk '{print $1}' "$HOME/.fonts/_sysinit_font.lock"
}

remove_nerd_font() {
  if [ ! -f "$HOME/.fonts/_sysinit_font.lock" ]; then
    echo "No fonts installed with this script."
    return
  fi

  mapfile -t installed_fonts < <(awk '{print $1}' "$HOME/.fonts/_sysinit_font.lock")

  PS3='Select font to remove, or 0 to exit: '
  select font in "${installed_fonts[@]}"; do
    if [[ $REPLY == "0" ]]; then
      return
    elif [[ -z $font ]]; then
      echo 'Invalid choice, try again' >&2
    else
      break
    fi
  done

  if [ -d "$HOME/.fonts/$font/" ]; then
    rm -rf "$HOME/.fonts/$font/"
    fc-cache -fv
    sed -i "/^$font /d" "$HOME/.fonts/_sysinit_font.lock"
  fi
}
