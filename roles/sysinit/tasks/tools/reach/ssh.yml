---
- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ lookup('env', 'USER') }}"
  tags:
    - reach
    - reach-ssh
    - ssh
    - configuration

- name: Check for id_rsa
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
  register: rsa_key
  tags:
    - reach
    - reach-ssh
    - ssh

- name: Check for id_ed25519
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519"
  register: ed_key
  tags:
    - reach
    - reach-ssh
    - ssh

- name: Generate SSH key if none exists
  ansible.builtin.command: >
    ssh-keygen -t ed25519 -f "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519" -N '' \
    -C "{{ lookup('env', 'USER') }}@{{ ansible_hostname }}"
  become: false
  when: not (rsa_key.stat.exists or ed_key.stat.exists)
  register: ssh_key_generated
  args:
    creates: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519"

- name: Set SSH key permissions
  ansible.builtin.file:
    path: "{{ ssh_item.path }}"
    mode: "{{ ssh_item.mode }}"
  loop:
    - { path: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519", mode: '0600' }
    - { path: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519.pub", mode: '0644' }
  loop_control:
    loop_var: ssh_item
  become: false
  when: not (rsa_key.stat.exists or ed_key.stat.exists)

- name: Display SSH key generation result
  ansible.builtin.debug:
    msg: "Generated new SSH key at {{ lookup('env', 'HOME') }}/.ssh/id_ed25519"
  when: ssh_key_generated is defined and ssh_key_generated.changed

- name: Create SSH agent setup script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      # SSH Agent Setup Script for Ansible

      SSH_ENV="{{ lookup('env', 'HOME') }}/.ssh/agent-env"

      # Function to start SSH agent
      start_agent() {
          echo "Starting SSH agent..."
          ssh-agent > "$SSH_ENV"
          chmod 600 "$SSH_ENV"
          source "$SSH_ENV" > /dev/null
      }

      # Check if agent is running
      if [ -f "$SSH_ENV" ]; then
          source "$SSH_ENV" > /dev/null
          # Test if agent is still running
          if ! kill -0 "$SSH_AGENT_PID" 2>/dev/null; then
              start_agent
          fi
      else
          start_agent
      fi

      # Check if keys are loaded
      if ! ssh-add -l >/dev/null 2>&1; then
        echo "No keys loaded in SSH agent. Available keys:"
        for key in {{ lookup('env', 'HOME') }}/.ssh/id_rsa {{ lookup('env', 'HOME') }}/.ssh/id_ed25519; do
          if [ -f "$key" ]; then
            echo "  - $key"
            # Try to add the key (will prompt for passphrase if needed)
            if [ "$1" = "--interactive" ]; then
              ssh-add "$key"
            else
              echo "Run 'ssh-add $key' to add this key"
            fi
          fi
        done
      else
        echo "SSH keys are loaded:"
        ssh-add -l
      fi

      # Export environment for current session
      echo "To use SSH agent in your current session, run:"
      echo "source {{ lookup('env', 'HOME') }}/.ssh/agent-env"
    dest: "{{ lookup('env', 'HOME') }}/.ssh/setup-agent.sh"
    mode: '0755'
    owner: "{{ lookup('env', 'USER') }}"
  become: false

- name: Check if SSH agent is running and keys are loaded
  ansible.builtin.shell: |
    if [ -f {{ lookup('env', 'HOME') }}/.ssh/agent-env ]; then
      source {{ lookup('env', 'HOME') }}/.ssh/agent-env > /dev/null 2>&1
      if kill -0 "$SSH_AGENT_PID" 2>/dev/null && ssh-add -l >/dev/null 2>&1; then
        echo "agent_running_with_keys"
      else
        echo "agent_needs_setup"
      fi
    else
      echo "agent_needs_setup"
    fi
  register: ssh_agent_status
  become: false
  changed_when: false

- name: Run SSH agent setup
  ansible.builtin.command: "{{ lookup('env', 'HOME') }}/.ssh/setup-agent.sh"
  register: ssh_setup_result
  become: false
  when: ssh_agent_status.stdout == "agent_needs_setup"
  changed_when: "'Starting SSH agent' in ssh_setup_result.stdout"

- name: Display SSH agent setup results
  ansible.builtin.debug:
    var: ssh_setup_result.stdout_lines
  when: ssh_setup_result is defined and ssh_setup_result.changed

- name: Source SSH agent environment for Ansible
  ansible.builtin.shell: |
    if [ -f {{ lookup('env', 'HOME') }}/.ssh/agent-env ]; then
      source {{ lookup('env', 'HOME') }}/.ssh/agent-env
      echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK"
      echo "SSH_AGENT_PID=$SSH_AGENT_PID"
    else
      echo "no_agent_env"
      exit 1
    fi
  register: agent_env
  become: false
  failed_when: agent_env.rc != 0
  changed_when: false

- name: Set SSH agent environment facts
  ansible.builtin.set_fact:
    ssh_auth_sock: "{{ agent_env.stdout_lines | select('match', '^SSH_AUTH_SOCK=.*') | first | regex_replace('^SSH_AUTH_SOCK=(.*)$', '\\1') }}"
    ssh_agent_pid: "{{ agent_env.stdout_lines | select('match', '^SSH_AGENT_PID=.*') | first | regex_replace('^SSH_AGENT_PID=(.*)$', '\\1') }}"
  when: agent_env.stdout_lines is defined and agent_env.stdout_lines | length > 0
