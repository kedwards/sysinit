---
- name: Molecule Prepare
  hosts: all
  become: false
  gather_facts: false
  tasks:
    - name: Determine initial distribution
      ansible.builtin.raw: |
        if [ -f /etc/os-release ]; then
          . /etc/os-release
          echo "$ID"
        elif [ -f /etc/lsb-release ]; then
          . /etc/lsb-release
          echo "$DISTRIB_ID"
        elif [ -f /etc/redhat-release ]; then
          awk '{print $1}' /etc/redhat-release | tr '[:upper:]' '[:lower:]' | sed 's/centos/redhat/' | sed 's/scientific/redhat/'
        else
          echo "unknown"
        fi
      register: initial_distro_check
      changed_when: false
      failed_when: false

    - name: Set initial distribution fact
      ansible.builtin.set_fact:
        initial_distribution: "{{ initial_distro_check.stdout | trim }}"

    - name: Install Python and essential packages (APT)
      ansible.builtin.raw: |
        apt update
        apt install -y python3 python3-pip openssh-client python3-setuptools git curl wget gnupg2 sudo bison
        ln -sf /usr/bin/python3 /usr/bin/python
      register: install_python
      changed_when: install_python.rc == 0
      when: initial_distribution == 'debian' or initial_distribution == 'ubuntu'

    - name: Install Python and essential packages (PACMAN)
      ansible.builtin.raw: |
        pacman -Syu
        pacman -S --noconfirm python python-pip openssh python-setuptools git curl wget gnupg sudo bison
      register: install_python
      changed_when: install_python.rc == 0
      when: initial_distribution == 'arch'

    - name: Install Python and essential packages (DNF)
      ansible.builtin.raw: |
        dnf install -y python3 python3-pip openssh python3-setuptools git curl wget gnupg2 sudo bison python3-libdnf5
      register: install_python
      changed_when: install_python.rc == 0
      when: initial_distribution == 'fedora'

    - name: Install github3.py library
      ansible.builtin.raw: pip3 install --break-system-packages github3.py
      register: install_github3
      changed_when: install_github3.rc == 0

    - name: Gather facts after Python installation
      ansible.builtin.setup:

    - name: Create test user
      ansible.builtin.user:
        name: "{{ lookup('env', 'USER') }}"
        state: present
        create_home: true
        shell: /bin/bash
        groups: "{{ 'sudo' if initial_distribution in ['debian', 'ubuntu'] else 'wheel' }}"
        append: true

    - name: Create .ssh directory for test user
      ansible.builtin.file:
        path: "/home/{{ lookup('env', 'USER') }}/.ssh"
        state: directory
        mode: '0755'
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"
        recurse: true

    - name: Create .local/bin directory for test user
      ansible.builtin.file:
        path: "/home/{{ lookup('env', 'USER') }}/.local/bin"
        state: directory
        mode: '0755'
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"
        recurse: true

    - name: Set ownership of user home directory
      ansible.builtin.file:
        path: "/home/{{ lookup('env', 'USER') }}"
        state: directory
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"
        recurse: true
