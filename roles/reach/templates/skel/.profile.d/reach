#!/usr/bin/env bash
echo "Running sysinit"
# Detects the shell type (Bash or Zsh)
# set up completions
if [[ -n "$BASH_VERSION" ]]; then
  SHELL_TYPE="bash"
  [ -f /etc/bash_completion ] && source /etc/bash_completion
  mkdir -p "$HOME/.local/share/bash-completion/completions"
elif [[ -n "$ZSH_VERSION" ]]; then
  SHELL_TYPE="zsh"
  autoload bashcompinit && bashcompinit
  autoload -Uz compinit && compinit
else
  echo "Unsupported shell detected. This script is designed for Bash and Zsh."
  exit 1
fi

# add to path
path_add() {
  case ":$PATH:" in
  *":$1:"*) ;; # already in PATH
  *) PATH="$1:$PATH" ;;
  esac
}

# users local bin directory
path_add "$HOME/.local/bin"

# docker
if command -v docker &>/dev/null; then
  if [[ "$SHELL_TYPE" == "bash" ]]; then
    docker completion bash >"$HOME/.local/share/bash-completion/completions/docker"
  elif [[ "$SHELL_TYPE" == "zsh" ]]; then
    FPATH="$HOME/.docker/completions:$FPATH"
    mkdir -p "$HOME/.docker/completions"
    docker completion zsh >"$HOME/.docker/completions/_docker"
  fi
fi

# git
if command -v git &>/dev/null; then
  file="$HOME/.local/share/bash-completion/completions/git-completion.$SHELL_TYPE"
  if [ -f "$file" ]; then
    source "$file"
  fi
fi

# mise
if command -v mise &>/dev/null; then
  [[ -n "$MISE_ACTIVATED" ]] || {
    export MISE_ACTIVATED=1
    eval "$(mise activate "$SHELL_TYPE")"
  }

  mise_info() {
    local tool="$1"
    local exec_path install_path
    exec_path=$(mise which "$tool" 2>/dev/null) || return 1
    install_path=$(mise where "$tool" 2>/dev/null) || return 1
    printf '%s %s\n' "$exec_path" "$install_path"
  }

  # awscli
  if read -ra info <<<"$(mise_info awscli)"; then
    aws_completer_path="${info[0]%/*}/aws_completer"
    if [[ -f "$aws_completer_path" ]]; then
      complete -C "$aws_completer_path" aws
    fi
  fi

  # granted.
  if read -ra info <<<"$(mise_info granted)"; then
  #   export GRANTED_QUIET=true
  #   export GRANTED_ALIAS_CONFIGURED=true
    alias assume='source assume'
  fi

  # starship
  if read -ra info <<<"$(mise_info starship)"; then
    eval -- "$(${info[0]} init "$SHELL_TYPE")"
    export STARSHIP_CONFIG=~/.config/starship.toml
  fi
fi
